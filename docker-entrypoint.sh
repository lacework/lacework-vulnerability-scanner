#!/usr/local/bin/bash


# Default values
fail_only_if_vulnerabilities_fixable=${FAIL_ONLY_IF_VULNERABILITIES_FIXABLE:-false}
fail_if_critical_vulnerabilities_found=${FAIL_IF_CRITICAL_VULNERABILITIES_FOUND:-true}
fail_if_high_vulnerabilities_found=${FAIL_IF_HIGH_VULNERABILITIES_FOUND:-true}
fail_if_medium_vulnerabilities_found=${FAIL_IF_MEDIUM_VULNERABILITIES_FOUND:-true}
fail_if_low_vulnerabilities_found=${FAIL_IF_LOW_VULNERABILITIES_FOUND:-false}
fail_if_info_vulnerabilities_found=${FAIL_IF_INFO_VULNERABILITIES_FOUND:-false}
save_html=${SAVE_HTML_REPORT:-false}
use_policy=${USE_POLICY:-false}
save_report=${SAVE_REPORT:-flase}


# Add parameters based on arguments
export SCANNER_PARAMETERS=""
if [ ${use_policy} == "true" ]; then
    export SCANNER_PARAMETERS="${SCANNER_PARAMETERS} --policy --fail-on-violation-exit-code 1"
fi
if [ ${save_report} = "true" ]; then
    export SCANNER_PARAMETERS="${SCANNER_PARAMETERS} --save"
fi
if [ ${save_html} == "true" ]; then
    export SCANNER_PARAMETERS="${SCANNER_PARAMETERS} --html"
fi
if [ ! -z "${HTML_REPORT_FILE_NAME}" ]; then
    export SCANNER_PARAMETERS="${SCANNER_PARAMETERS} --html-file ${HTML_REPORT_FILE_NAME}"
fi

# Run scanner
/lw-scanner image evaluate ${IMAGE_NAME} ${IMAGE_TAG} --build-plan ${BUILD_PLAN} --build-id ${BUILD_ID} ${SCANNER_PARAMETERS} --data-directory root
export LW_SCANNER_EXIT_CODE=$?

# Exit if check is failed
if [ ${use_policy} == "false" ] && [ ${LW_SCANNER_EXIT_CODE} != 0 ]; then
    echo "Vulnerability scan failed. Failing action as security can not be guaranteed."
    exit 1
fi

# Checking results
if [ ${use_policy} == "false" ] && [ ${fail_only_if_vulnerabilities_fixable} == "true" ] && [ $(cat /root/evaluations/${IMAGE_NAME}/${IMAGE_TAG}/evaluation_*.json | jq '.cve.fixable_vulnerabilities') -ge 1 ]; then
    echo "At least one fixable vulnerabilty found."
    exit 21
elif [ ${use_policy} == "false" ] && [ ${fail_if_critical_vulnerabilities_found} == "true" ] && [ $(cat /root/evaluations/${IMAGE_NAME}/${IMAGE_TAG}/evaluation_*.json | jq '.cve.critical_vulnerabilities') -ge 1 ]; then
    echo "At least one critical vulnerabilty found."
    exit 22
elif [ ${use_policy} == "false" ] && [ ${fail_if_high_vulnerabilities_found} == "true" ] && [ $(cat /root/evaluations/${IMAGE_NAME}/${IMAGE_TAG}/evaluation_*.json | jq '.cve.high_vulnerabilities') -ge 1 ]; then
    echo "At least one high vulnerabilty found."
    exit 23
elif [ ${use_policy} == "false" ] && [ ${fail_if_medium_vulnerabilities_found} == "true" ] && [ $(cat /root/evaluations/${IMAGE_NAME}/${IMAGE_TAG}/evaluation_*.json | jq '.cve.medium_vulnerabilities') -ge 1 ]; then
    echo "At least one medium vulnerabilty found."
    exit 24
elif [ ${use_policy} == "false" ] && [ ${fail_if_low_vulnerabilities_found} == "true" ] && [ $(cat /root/evaluations/${IMAGE_NAME}/${IMAGE_TAG}/evaluation_*.json | jq '.cve.low_vulnerabilities') -ge 1 ]; then
    echo "At least one low vulnerabilty found."
    exit 25
elif [ ${use_policy} == "false" ] && [ ${fail_if_info_vulnerabilities_found} == "true" ] && [ $(cat /root/evaluations/${IMAGE_NAME}/${IMAGE_TAG}/evaluation_*.json | jq '.cve.info_vulnerabilities') -ge 1 ]; then
    echo "At least one info vulnerabilty found."
    exit 26
else
    exit ${LW_SCANNER_EXIT_CODE}
fi
