# Get static binaries and environement required for the scratch image
FROM golang:alpine AS builder

RUN mkdir -p /usr/local/busybox
RUN mkdir -p /usr/local/docker
RUN mkdir -p /usr/local/tar
RUN mkdir -p /usr/local/bash
RUN mkdir -p /usr/local/jq

RUN apk --no-cache add curl
RUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-20.10.8.tgz && tar --strip-components=1 -xvzf docker-20.10.8.tgz -C /usr/local/docker
RUN curl -fsSLO https://github.com/static-linux/static-binaries-i386/raw/master/tar-1.28.tar.gz && tar --strip-components=1 -xvzf tar-1.28.tar.gz -C /usr/local/tar
RUN curl -fsSLO https://github.com/static-linux/static-binaries-i386/raw/master/bash-4.3.30.tar.gz && tar --strip-components=1 -xvzf bash-4.3.30.tar.gz -C /usr/local/bash
RUN curl -fsSLO https://github.com/static-linux/static-binaries-i386/raw/master/jq-1.4.tar.gz && tar --strip-components=1 -xvzf jq-1.4.tar.gz -C /usr/local/jq
RUN curl -fsSLO https://github.com/static-linux/static-binaries-i386/raw/master/busybox-1.23.2.tar.gz && tar --strip-components=1 -xvzf busybox-1.23.2.tar.gz -C /usr/local/busybox

RUN apk --no-cache add upx
COPY ./binaries/lw-scanner-linux-amd64 /lw-scanner
RUN upx /lw-scanner
RUN upx /usr/local/docker/docker
RUN upx /usr/local/tar/tar
RUN upx /usr/local/bash/bash
RUN upx /usr/local/jq/jq

# The actual scratch image
FROM scratch
COPY ./docker-entrypoint.sh /docker-entrypoint.sh

# Import the user and group files from the builder.
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group
COPY --from=builder /etc/ssl/cert.pem /etc/ssl/cert.pem

# Required binarys for lw-scanner and docker-entrypoint.sh
COPY --from=builder /usr/local/busybox/bin/cat /usr/local/bin/cat
COPY --from=builder /usr/local/docker/docker /usr/local/bin/docker
COPY --from=builder /usr/local/tar/tar /usr/local/bin/tar
COPY --from=builder /usr/local/bash/bash /usr/local/bin/bash
COPY --from=builder /usr/local/jq/jq /usr/local/bin/jq
COPY --from=builder /lw-scanner /lw-scanner

# Default lw-scanner configuration
ENV LW_SCANNER_DISABLE_UPDATES=true
ENV LW_SCANNER_SCAN_LIBRARY_PACKAGES=true
ENV PATH=/usr/local/bin

USER root

CMD ["/usr/local/bin/bash", "/docker-entrypoint.sh"]
